version: '3.8'

services:
  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aternos-dashboard
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      PTERO_PANEL_URL: ${PTERO_PANEL_URL}
      PTERO_API_KEY: ${PTERO_API_KEY}
      PTERO_CLIENT_API_KEY: ${PTERO_CLIENT_API_KEY}
      NEXT_PUBLIC_PTERO_PANEL_URL: ${NEXT_PUBLIC_PTERO_PANEL_URL}
      PTERO_CRED_KEY: ${PTERO_CRED_KEY}
      PTERO_EGG_ID: ${PTERO_EGG_ID:-}
      PTERO_DOCKER_IMAGE: ${PTERO_DOCKER_IMAGE:-}
      PTERO_STARTUP: ${PTERO_STARTUP:-}
      PTERO_LOCATION_IDS: ${PTERO_LOCATION_IDS:-}
      PTERO_ENV_JSON: ${PTERO_ENV_JSON:-{}}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database (Optional - use external DB if preferred)
  db:
    image: postgres:16-alpine
    container_name: aternos-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-dashboard_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
      POSTGRES_DB: ${DB_NAME:-aternos_dashboard}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dashboard_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage (Optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: aternos-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

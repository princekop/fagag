# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in the values
# For production: Ensure all secrets are properly generated and secured
# 
# To generate secure secrets, use:
# - Linux/Mac: openssl rand -base64 32
# - Windows PowerShell: -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 32 | ForEach-Object {[char]$_})
# =============================================================================

# -----------------------------------------------------------------------------
# Node Environment
# -----------------------------------------------------------------------------
NODE_ENV="development"  # Options: development, production

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# Production: PostgreSQL (recommended)
# Format: postgresql://username:password@host:port/database
# Example: postgresql://lustnode_user:strongpassword@localhost:5432/lustnode_db
DATABASE_URL="postgresql://lustnode_user:your_password@localhost:5432/lustnode_db"

# -----------------------------------------------------------------------------
# NextAuth Configuration
# -----------------------------------------------------------------------------
# IMPORTANT: Use HTTPS in production!
NEXTAUTH_URL="http://localhost:3000"

# CRITICAL: Generate a strong secret (minimum 32 characters)
# Never use the default value in production!
NEXTAUTH_SECRET="your-secret-key-here"

# -----------------------------------------------------------------------------
# Pterodactyl Panel Configuration (Server-side)
# -----------------------------------------------------------------------------
# Your Pterodactyl panel URL (must be HTTPS in production)
PTERO_PANEL_URL="https://your-panel.example.com"

# Application API Key (from Admin panel -> Application API)
PTERO_API_KEY="your-application-api-key"

# Client API Key (from Account -> API Credentials)
PTERO_CLIENT_API_KEY="your-client-api-key"

# -----------------------------------------------------------------------------
# Pterodactyl Panel Configuration (Client-side)
# -----------------------------------------------------------------------------
# Public-facing panel URL for client-side links
NEXT_PUBLIC_PTERO_PANEL_URL="https://your-panel.example.com"

# -----------------------------------------------------------------------------
# Optional: Default Provisioning Settings
# -----------------------------------------------------------------------------
PTERO_EGG_ID=""
PTERO_DOCKER_IMAGE=""
PTERO_STARTUP=""
PTERO_LOCATION_IDS=""
PTERO_ENV_JSON='{}'

# -----------------------------------------------------------------------------
# Encryption Configuration
# -----------------------------------------------------------------------------
# CRITICAL: Must be exactly 32 characters for AES-256 encryption
# Used for encrypting panel passwords in database
# Generate with: openssl rand -base64 32 | cut -c1-32
PTERO_CRED_KEY="your-32-char-encryption-key-here"
